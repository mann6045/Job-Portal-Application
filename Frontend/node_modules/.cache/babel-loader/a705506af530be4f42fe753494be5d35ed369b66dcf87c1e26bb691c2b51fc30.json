{"ast":null,"code":"var _jsxFileName = \"/Users/mp0668693gmail.com/Desktop/job-portal/src/pages/UploadResume.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport api from '../api/api';\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadResume() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [msg, setMsg] = useState('');\n  const submit = async e => {\n    e.preventDefault();\n    if (!file) return setMsg('Select a file first');\n    const fd = new FormData();\n    // backend expects param name \"file\" as in you posted earlier\n    fd.append('file', file);\n    try {\n      const res = await api.post('/api/resume/upload', fd, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setMsg(res.data || 'Uploaded');\n    } catch (e) {\n      setMsg('Upload failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadResume, \"eM9AwOi1etSUbIbeEENkwcNdrUc=\");\n_c = UploadResume;\nvar _c;\n$RefreshReg$(_c, \"UploadResume\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","UploadResume","_s","file","setFile","msg","setMsg","submit","e","preventDefault","fd","FormData","append","res","post","headers","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","files","_c","$RefreshReg$"],"sources":["/Users/mp0668693gmail.com/Desktop/job-portal/src/pages/UploadResume.js"],"sourcesContent":["import React, { useState } from 'react';\nimport api from '../api/api';\nimport '../styles.css';\n\nexport default function UploadResume() {\n  const [file, setFile] = useState(null);\n  const [msg, setMsg] = useState('');\n\n  const submit = async (e) => {\n    e.preventDefault();\n    if (!file) return setMsg('Select a file first');\n    const fd = new FormData();\n    // backend expects param name \"file\" as in you posted earlier\n    fd.append('file', file);\n    try {\n      const res = await api.post('/api/resume/upload', fd, {\n        headers: { 'Content-Type': 'multipart/form-data' }\n      });\n      setMsg(res.data || 'Uploaded');\n    } catch (e) {\n      setMsg('Upload failed');\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <h2>Upload Resume</h2>\n      {msg && <div className=\"info\">{msg}</div>}\n      <form className=\"form\" onSubmit={submit}>\n        <input type=\"file\" onChange={e => setFile(e.target.files[0])} />\n        <button className=\"btn\" type=\"submit\">Upload</button>\n      </form>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,YAAY;AAC5B,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMU,MAAM,GAAG,MAAOC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,IAAI,EAAE,OAAOG,MAAM,CAAC,qBAAqB,CAAC;IAC/C,MAAMI,EAAE,GAAG,IAAIC,QAAQ,CAAC,CAAC;IACzB;IACAD,EAAE,CAACE,MAAM,CAAC,MAAM,EAAET,IAAI,CAAC;IACvB,IAAI;MACF,MAAMU,GAAG,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,oBAAoB,EAAEJ,EAAE,EAAE;QACnDK,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;MACFT,MAAM,CAACO,GAAG,CAACG,IAAI,IAAI,UAAU,CAAC;IAChC,CAAC,CAAC,OAAOR,CAAC,EAAE;MACVF,MAAM,CAAC,eAAe,CAAC;IACzB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKiB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBlB,OAAA;MAAAkB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBjB,GAAG,iBAAIL,OAAA;MAAKiB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAEb;IAAG;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACzCtB,OAAA;MAAMiB,SAAS,EAAC,MAAM;MAACM,QAAQ,EAAEhB,MAAO;MAAAW,QAAA,gBACtClB,OAAA;QAAOwB,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEjB,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACkB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChEtB,OAAA;QAAQiB,SAAS,EAAC,KAAK;QAACO,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACpB,EAAA,CA9BuBD,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}