{"ast":null,"code":"var _jsxFileName = \"/Users/mp0668693gmail.com/Desktop/job-portal/src/pages/RecruiterDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../api/axiosConfig';\nimport JobCard from '../components/JobCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecruiterDashboard({\n  user\n}) {\n  _s();\n  const [job, setJob] = useState({\n    title: '',\n    description: '',\n    location: '',\n    skills: ''\n  });\n  const [myJobs, setMyJobs] = useState([]);\n  const [applicantsMap, setApplicantsMap] = useState({}); // Map jobId -> applicant list\n\n  const handleChange = e => {\n    setJob({\n      ...job,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Fetch jobs posted by this recruiter\n  const fetchMyJobs = async () => {\n    try {\n      const res = await api.get('/jobs/my-jobs', {\n        withCredentials: true\n      });\n      setMyJobs(res.data);\n\n      // For each job, fetch applicants\n      const newApplicantsMap = {};\n      for (const j of res.data) {\n        const applicantsRes = await api.get(`/jobs/applicants/${j.id}`, {\n          withCredentials: true\n        });\n        newApplicantsMap[j.id] = applicantsRes.data;\n      }\n      setApplicantsMap(newApplicantsMap);\n    } catch (err) {\n      console.error('Error fetching my jobs:', err);\n    }\n  };\n  useEffect(() => {\n    fetchMyJobs();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await api.post('/jobs/create', job, {\n        withCredentials: true\n      });\n      alert('Job created successfully!');\n      setJob({\n        title: '',\n        description: '',\n        location: '',\n        skills: ''\n      }); // reset form\n      fetchMyJobs(); // Refresh the list\n    } catch (err) {\n      console.error('Error creating job:', err);\n      alert('Failed to create job. Are you logged in as a recruiter?');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post a New Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Job Title\",\n        onChange: handleChange,\n        value: job.title,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Job Description\",\n        onChange: handleChange,\n        value: job.description,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"location\",\n        placeholder: \"Location\",\n        onChange: handleChange,\n        value: job.location,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"skills\",\n        placeholder: \"Skills (comma separated)\",\n        onChange: handleChange,\n        value: job.skills,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: '2rem'\n      },\n      children: \"My Posted Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), myJobs.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No jobs posted yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 31\n    }, this), myJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1.5rem',\n        border: '1px solid #ccc',\n        padding: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(JobCard, {\n        job: job,\n        showDelete: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Applicants:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), applicantsMap[job.id] && applicantsMap[job.id].length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: applicantsMap[job.id].map((applicant, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: applicant.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 19\n          }, this), \" - \", applicant.email, \" - \", applicant.mobileNo, \" - \", applicant.education]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No applicants yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)]\n    }, job.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(RecruiterDashboard, \"4FHcPHUe3nsMSgSIv2nuh98LXbI=\");\n_c = RecruiterDashboard;\nvar _c;\n$RefreshReg$(_c, \"RecruiterDashboard\");","map":{"version":3,"names":["React","useState","useEffect","api","JobCard","jsxDEV","_jsxDEV","RecruiterDashboard","user","_s","job","setJob","title","description","location","skills","myJobs","setMyJobs","applicantsMap","setApplicantsMap","handleChange","e","target","name","value","fetchMyJobs","res","get","withCredentials","data","newApplicantsMap","j","applicantsRes","id","err","console","error","handleSubmit","preventDefault","post","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","style","marginTop","length","map","marginBottom","border","padding","showDelete","applicant","idx","fullName","email","mobileNo","education","_c","$RefreshReg$"],"sources":["/Users/mp0668693gmail.com/Desktop/job-portal/src/pages/RecruiterDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from '../api/axiosConfig';\nimport JobCard from '../components/JobCard';\n\nexport default function RecruiterDashboard({ user }) {\n  const [job, setJob] = useState({\n    title: '',\n    description: '',\n    location: '',\n    skills: '',\n  });\n\n  const [myJobs, setMyJobs] = useState([]);\n  const [applicantsMap, setApplicantsMap] = useState({}); // Map jobId -> applicant list\n\n  const handleChange = (e) => {\n    setJob({ ...job, [e.target.name]: e.target.value });\n  };\n\n  // Fetch jobs posted by this recruiter\n  const fetchMyJobs = async () => {\n    try {\n      const res = await api.get('/jobs/my-jobs', { withCredentials: true });\n      setMyJobs(res.data);\n      \n      // For each job, fetch applicants\n      const newApplicantsMap = {};\n      for (const j of res.data) {\n        const applicantsRes = await api.get(`/jobs/applicants/${j.id}`, { withCredentials: true });\n        newApplicantsMap[j.id] = applicantsRes.data;\n      }\n      setApplicantsMap(newApplicantsMap);\n    } catch (err) {\n      console.error('Error fetching my jobs:', err);\n    }\n  };\n\n  useEffect(() => {\n    fetchMyJobs();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await api.post('/jobs/create', job, { withCredentials: true });\n      alert('Job created successfully!');\n      setJob({ title: '', description: '', location: '', skills: '' }); // reset form\n      fetchMyJobs(); // Refresh the list\n    } catch (err) {\n      console.error('Error creating job:', err);\n      alert('Failed to create job. Are you logged in as a recruiter?');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Post a New Job</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Job Title\"\n          onChange={handleChange}\n          value={job.title}\n          required\n        />\n        <textarea\n          name=\"description\"\n          placeholder=\"Job Description\"\n          onChange={handleChange}\n          value={job.description}\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"location\"\n          placeholder=\"Location\"\n          onChange={handleChange}\n          value={job.location}\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"skills\"\n          placeholder=\"Skills (comma separated)\"\n          onChange={handleChange}\n          value={job.skills}\n          required\n        />\n        <button type=\"submit\">Create Job</button>\n      </form>\n\n      <h2 style={{ marginTop: '2rem' }}>My Posted Jobs</h2>\n      {myJobs.length === 0 && <p>No jobs posted yet.</p>}\n\n      {myJobs.map((job) => (\n        <div key={job.id} style={{ marginBottom: '1.5rem', border: '1px solid #ccc', padding: '1rem' }}>\n          <JobCard job={job} showDelete={false} />\n          <h4>Applicants:</h4>\n          {applicantsMap[job.id] && applicantsMap[job.id].length > 0 ? (\n            <ul>\n              {applicantsMap[job.id].map((applicant, idx) => (\n                <li key={idx}>\n                  <strong>{applicant.fullName}</strong> - {applicant.email} - {applicant.mobileNo} - {applicant.education}\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>No applicants yet.</p>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}