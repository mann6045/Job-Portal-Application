{"ast":null,"code":"var _jsxFileName = \"/Users/mp0668693gmail.com/Desktop/job-portal/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  setUser\n}) {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  async function submit(e) {\n    e.preventDefault();\n    setError('');\n    try {\n      // replace with your API call\n      // const res = await api.post('/api/auth/login', { username, password });\n      // setUser(res.data);\n      alert(`Logged in as ${username}`);\n    } catch (err) {\n      setError('Login failed');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: \"Admin Panel Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          className: \"input\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          autoComplete: \"username\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          className: \"input\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          autoComplete: \"current-password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"small\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Login, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","setUser","_s","username","setUsername","password","setPassword","error","setError","submit","e","preventDefault","alert","err","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","autoComplete","required","type","_c","$RefreshReg$"],"sources":["/Users/mp0668693gmail.com/Desktop/job-portal/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Login.css';\n\nexport default function Login({ setUser }) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  async function submit(e) {\n    e.preventDefault();\n    setError('');\n\n    try {\n      // replace with your API call\n      // const res = await api.post('/api/auth/login', { username, password });\n      // setUser(res.data);\n      alert(`Logged in as ${username}`);\n    } catch (err) {\n      setError('Login failed');\n    }\n  }\n\n  return (\n    <>\n      <header className=\"header\">Admin Panel Login</header>\n\n      <div className=\"container\">\n        <form onSubmit={submit}>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            id=\"username\"\n            className=\"input\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            autoComplete=\"username\"\n            required\n          />\n\n          <label htmlFor=\"password\">Password</label>\n          <input\n            id=\"password\"\n            className=\"input\"\n            type=\"password\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            autoComplete=\"current-password\"\n            required\n          />\n\n          <button type=\"submit\" className=\"btn\">Login</button>\n\n          {error && <div className=\"small\">{error}</div>}\n        </form>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}